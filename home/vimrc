" A simple Vim configuration by Libor Wagner
"
" Based on:
"   Bjorn Wincler's article b4winckler.wordpress.com
"   Petar Radosevic vim configuration

set nocompatible            " Not realy sure what it does but every one has it
let mapleader=','

" NeoBundle
if has('vim_starting')
    set runtimepath+=~/.vim/neobundle.vim/
endif
call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundle 'Shougo/vimproc'

" Neocomplete
NeoBundle 'Shougo/neocomplete'
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#sources#syntax#min_keyword_length = 3

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

" TaskPaper
NeoBundle 'davidoc/taskpaper.vim'

NeoBundle 'tpope/vim-fugitive'
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1

" MultipleCursors
NeoBundle 'terryma/vim-multiple-cursors'

" CtrlP
NeoBundle 'kien/ctrlp.vim'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_extensions = ['tag']

" ',f' and ',F' for full project search and for directory search (CtrlP)
map <leader>f :CtrlP<cr>
map <leader>F :CtrlP %%<cr>
map <leader>b :CtrlPBuffer<cr>
map <leader>a :CtrlPMixed<cr>

" Powerline
NeoBundle 'bling/vim-airline'
let g:airline_theme='solarized'

" Syntastic
NeoBundle 'scrooloose/syntastic'
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_error_symbol = 'âœ—'
let g:syntastic_warning_symbol = '!'
let g:syntastic_python_flake8_args = '--ignore="E702,E221,E231,E501,E401,E251,E272" --max-line-length=160'


NeoBundle 'godlygeek/tabular'
NeoBundle 'ervandew/supertab'

" Haskell
NeoBundle 'lukerandall/haskellmode-vim'
NeoBundle 'eagletmt/ghcmod-vim'
NeoBundle 'ujihisa/neco-ghc'

au BufEnter *.hs compile ghc
let g:haddock_browser = "/usr/bin/open"
let g:ghc = "/usr/local/bin/ghc"


" UltiSnips
" NeoBundle 'SirVer/ultisnips'
" let g:UltiSnipsExpandTrigger="<tab>"
" let g:UltiSnipsJumpForwardTrigger="<tab>"
" let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
" let g:UltiSnipsSnippetDirectories=["UltiSnips","snippets"]
" let g:UltiSnipsSnippetsDir='~/.vim/snippets'

autocmd! bufwritepost .vimrc source %

" Minimal settings
set background=dark         " Just dark
syntax on                   " And colors
filetype plugin indent on   " ...

" Encoding
set encoding=utf-8          " Only utf-8
set fileencoding=utf-8      " ...

" The rest
set showmatch               " show matching brackets (), {}' []
set showcmd                 " show command
set laststatus=2            " occasions to show status line, 2=always.
set hidden                  " move buffer to background without saving
set wrap                    " set long-line wrapping
set whichwrap+=<,>,h,l
set textwidth=80            " disable automatic text-width
set history=1000            " more history
set shortmess=atI           " shorten confirmation messages
set bs=2                    " fix backspace in FreeBSD
set scrolloff=3             " keep 3 lines below/above cursor
set showmode                " shows the mode i'm currently in
set showcmd                 " shows partial command in the last line
set ttyfast                 " improved remote connections
set ruler                   " show the line and column number of the cursor
set backspace=indent,eol,start
set number                  " show line numbering
set undofile                " create undofiles
set formatoptions=qrn1
set colorcolumn=80
set virtualedit=block
let g:tex_conceal = ""

" Gui
if has("gui_running")
    colorscheme solarized
    set anti
    set go-=T
else
    set t_Co=256
    let g:solarized_termcolors=256
    colorscheme solarized
    set mouse=a
    set ttymouse=xterm
    set termencoding=utf-8
endif

" Bash-like filename completion
set wildmenu
set wildmode=list:longest
set wildignore=*.o,*.fasl,*.tmp,.git,*.pyc,*.jpg,*.gif,*.png,*.mo

" Backup settings
set undodir=~/.vim/tmp/undo//     " undo files
set backupdir=~/.vim/tmp/backup// " backups
set directory=~/.vim/tmp/swap//   " swap files
set backup                        " enable backups
set noswapfile                    " no swapping

" Whitespace
set nowrap
set tabstop=4
set shiftwidth=4
set expandtab
set list
set lcs=tab:>-,trail:-,nbsp:~
nmap <leader>l :set list!<CR>

" Search
set ignorecase                  " case-insensitive search
set smartcase                   " upper-case sensitive search
set hls                         " highlight search
set is                          " search interactively

" Mappings
map <leader>= gg=G``
nnoremap <CR> :set hlsearch!<CR>
map <leader>p :set paste!<cr>

" switch between buffers with ',,'
nnoremap <leader><leader> <c-^>

" double percentage sign in command mode is expanded
" to directory of current file - http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>

" Auto commands

autocmd BufRead *.py set filetype=python

NeoBundleCheck
